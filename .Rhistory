aggr(shanghaiData[shanghaiData$year==2015,-4])
md.pattern(shanghaiData[shanghaiData$year==2015,-4])
with(rankings, rankings[new_name=='London School of Economics and Political Science',c('world_rank','ns','new_name')])
View(timesData)
with(timesData, timesData[new_name=='London School of Economics and Political Science',c('world_rank','ns','new_name')])
with(timesData, timesData[new_name=='London School of Economics and Political Science',])
aggr(shanghaiData[shanghaiData$year==2015,-4])
aggr(shanghaiData[shanghaiData$year==2015,-4])
aggr(shanghaiData[shanghaiData$year==2015,-4])
md.pattern(shanghaiData[shanghaiData$year==2015,-4])
temp = shanghaiData[!complete.cases(shanghaiData[,-4]),-4]
View(temp)
with(shanghaiData, shanghaiData[new_name=='London School of Economics and Political Science',])
with(shanghaiData, shanghaiData[new_name=='Stockholm School of Economics',])
k = sqrt(nrow(timesData))
sqrt(nrow(timesData))
kNN(shanghaiData, k = 51)
shanghaiData.i = kNN(shanghaiData, k = 51)
warnings()
View(shanghaiData.i)
aggr(shanghaiData.i[shanghaiData.i$year==2015,-4])
with(shanghaiData, shanghaiData[new_name=='Stockholm School of Economics',])
with(shanghaiData.i, shanghaiData.i[new_name=='Stockholm School of Economics',])
aggr(cwur)
md.pattern(cwur)
temp = cwur[!complete.cases(cwur),]
temp = cwur[!complete.cases(cwur) & year==2015,]
temp = cwur[!complete.cases(cwur) & cwur$year==2015,]
temp = cwur[!complete.cases(cwur),]
aggr(timesData)
names(timesData)
aggr(timesData[,-9])
md.pattern(timesData[,9])
md.pattern(timesData[,-9])
View(timesData)
temp = timesData[!complete.cases(timesData),]
temp = timesData[!complete.cases(timesData),]; temp
View(temp)
temp = timesData[!complete.cases(timesData),1:9]
temp = timesData[timesData$year==2015 & !complete.cases(timesData),1:9]
temp = timesData[timesData$year==2015 & !complete.cases(timesData[,1:9]),1:9]
temp = timesData[timesData$year==2015 & !complete.cases(timesData[,1:8]),1:8]
aggr(timesData[timesData$year==2015,-9])
aggr(timesData[timesData$year==2015,1:8])
names(timesData)
aggr(timesData[timesData$year==2015,1:8])
temp = timesData[timesData$year==2015 & !complete.cases(timesData[,1:8]),1:8]
sqrt(nrow(shanghaiData))
shanghaiData.i = kNN(shanghaiData, k = 70)
View(shanghaiData.i)
sqrt(nrow(timesData))
timesData.i = kNN(timesData, k = 51)
aggr(timesData.i[timesData.i$year==2015,1:8])
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
setwd("~/Desktop/Project 2/world-university-ranking")
## global.R ##
library(dplyr)
source('helpers.r')
school_and_country_table = read.csv("./data/school_and_country_table.csv", stringsAsFactors = F) %>%
rename(., university_name = school_name)
cleanupCountry = read.csv("./data/cleanupCountry.csv", stringsAsFactors = F)
cleanupRename = read.csv("./data/cleanupRename.csv", stringsAsFactors = F)
cleanupCoord = read.csv("./data/cleanupCoord.csv", stringsAsFactors = F)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
library(VIM)
aggr(cwur)
aggr(cwur[cwur$year==2015,])
aggr(shanghaiData[shanghaiData$year==2015,])
shanghaiData = read.csv("./data/shanghaiData.csv", stringsAsFactors = F) %>%
left_join(., rbind(school_and_country_table,cleanupCountry), by = c('university_name')) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
#Missingness check:
aggr(shanghaiData[shanghaiData$year==2015,])
View(shanghaiData)
sqrt(nrow(shanghaiData))
shanghaiData.i = kNN(shanghaiData, k = 70)
shanghaiData.i = kNN(shanghaiData, k = 70)
View(shanghaiData.i)
shanghaiData = shanghaiData.i[,1:13]
aggr(shanghaiData)
aggr(timesData)
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
aggr(timesData)
aggr(timesData[,1:9])
aggr(timesData[timesData$year==2015,1:9])
timesData.i = kNN(timesData, k = 51)
timesData = timesData.i[,1:15]
aggr(timesData[timesData$year==2015,1:9])
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
temp = timesData[timesData$year==2015 & !complete.cases(timesData[,1:8]),1:8]
View(temp)
runApp()
unimap<-leaflet(df.2015.uni) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
zoom=1,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
library(shiny)
library(leaflet)
library(googleVis)
library(htmltools)
source('./helpers.R')
unimap<-leaflet(df.2015.uni) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
zoom=1,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
setwd("~/Desktop/Project 2/world-university-ranking")
## global.R ##
library(dplyr)
source('helpers.r')
school_and_country_table = read.csv("./data/school_and_country_table.csv", stringsAsFactors = F) %>%
rename(., university_name = school_name)
cleanupCountry = read.csv("./data/cleanupCountry.csv", stringsAsFactors = F)
cleanupRename = read.csv("./data/cleanupRename.csv", stringsAsFactors = F)
cleanupCoord = read.csv("./data/cleanupCoord.csv", stringsAsFactors = F)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
#Missingness check: no NAs for 2015
shanghaiData = read.csv("./data/shanghaiData.csv", stringsAsFactors = F) %>%
left_join(., rbind(school_and_country_table,cleanupCountry), by = c('university_name')) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
#Missingness check: total_score is missing for universities ranked >100 (do not use; take rank instead); use kNN for imputing ns NAs (sqrt(n) ~ 70)
shanghaiData.i = kNN(shanghaiData, k = 70)
shanghaiData = shanghaiData.i[,1:13]
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
#Missingness check: total_score is missing for universities ranked >200 (do not use; take rank instead); use kNN for imputing NAs (sqrt(n) ~ 51)
timesData.i = kNN(timesData, k = 51)
timesData = timesData.i[,1:15]
#Data frame of unique universities ranked in 2015
rankings = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')]) %>%
filter(., year == 2015) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country))) %>%
left_join(., cleanupCoord[,c('new_name','lon','lat')], by = c('new_name')) %>%
left_join(., cwur[,c(1,4:15)], by = c('new_name', 'year')) %>%
left_join(., timesData[,c(1,4:15)], by = c('new_name', 'year')) %>%
left_join(., shanghaiData[,c(1,3:11,13)], by = c('new_name', 'year')) %>%
rename(., rank_cwur = world_rank.x,
national_rank_cwur = national_rank.x,
citations_cwur = citations.x,
total_score_cwur = total_score.x,
rank_times = world_rank.y,
citations_times = citations.y,
total_score_times = total_score.y,
rank_shanghai = world_rank,
national_rank_shanghai = national_rank.y,
total_score_shanghai = total_score) %>%
mutate(., rank_times = gsub('=','',rank_times)) %>%
mutate(., rank_times = as.integer(sapply(rank_times, split_rank)),
rank_shanghai = as.integer(sapply(rank_shanghai, split_rank))) %>%
arrange(., desc(new_name))
countries = sort(unique(rankings$country))
universities = sort(unique(rankings$new_name))
df.2015.mean = rankings[,c(2,6:23,25,28,30:36)] %>%
group_by(country) %>%
summarise_each(funs(f = round(mean(., na.rm=TRUE))))
df.2015.country = rankings %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai))) %>%
left_join(., df.2015.mean, by = 'country')
df.2015.uni = rankings %>%
filter(., !is.na(lon) & !is.na(lat)) ####---> Need to add more coordinates!!!!
unimap<-leaflet(df.2015.uni) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
zoom=1,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni, zoom=1) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni, zoom=1) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap<-leaflet(df.2015.uni, zoom=1) %>%
setView(zoom=3) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni) %>%
setView(zoom=3) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni) %>%
setView(lng=0, lat=0, zoom=3) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni) %>%
setView(lng=0, lat=0, zoom=1) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
unimap<-leaflet(df.2015.uni) %>%
setView(lng=0, lat=0, zoom=2) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
runApp()
View(timesData)
unique(timesData$world_rank)
runApp()
View(shanghaiData)
runApp()
runApp()
df.2015.uni
df.2015.uni %>%
filter(rank_shanghai>=input$s.sh.rank[1],
rank_shanghai<=input$s.sh.rank[2])
df.2015.uni %>%
filter(rank_shanghai>=5,#input$s.sh.rank[1],
rank_shanghai<=100)
runApp()
df <- df.2015.uni %>%
filter(rank_shanghai>=1,#input$s.sh.rank[1],
rank_shanghai<=100)
unimap<-leaflet(data = df) %>%#unimapdata()) %>%
setView(lng=0, lat=0, zoom=2) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addCircleMarkers(~lon, ~lat,
radius = 4, stroke = F, fillOpacity = 0.5,
popup = ~paste(sep = "<br/>",new_name,
"Shanghai rank:",rank_shanghai,
"Times rank:",rank_times,
"CWUR rank:",rank_cwur))
unimap
runApp()
runApp()
geocode('columbia university')
geocode('columbia university, usa')
geocode('columbia university, ny, usa')
runApp()
runApp()
runApp()
max(rankings$rank_times)
max(rankings$rank_times, na.rm = T)
max(rankings$rank_shanghai, na.rm = T)
max(rankings$rank_cwur, na.rm = T)
runApp()
runApp()
runApp()
runApp()
ggplot(data=rankings3[rankings3$country==c('United States of America'),], aes(x=value)) +
geom_density(aes(color=variable))
rankings2 = rankings[,c('country','new_name','rank_shanghai','rank_times','rank_cwur')]
rankings2 = melt(rankings2, id=c("country","new_name"))
rankings3 = rankings2[complete.cases(rankings2),]
ggplot(data=rankings3[rankings3$country==c('United States of America'),], aes(x=value)) +
geom_density(aes(color=variable))
temp = rankings[is.na(rankings$rank_cwur),]
View(temp)
temp = cwur
temp = cwur[cwur$year==2015,]
sapply(temp,max)
ranktoscore = function(x,n) {
return((1-x/n) * 100)
}
a = ranktoscore(cwur$quality_of_education,1000)
a
1-367/1000
names(cwur)
ranktoscore = function(x) {
return((1-x/1000) * 100) #n=1000 obs in CWUR 2015
}
a = ranktoscore(cwur$quality_of_education,1000)
a = ranktoscore(cwur$quality_of_education)
sapply(cwur[,c(5:12)], ranktoscore)
a = sapply(cwur[,c(5:12)], ranktoscore)
View(a)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
View(cwur)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name)) %>%
filter(., year == 2015)
View(cwur)
names(cwur)
cwur2 = sapply(cwur[,c(5:12)], ranktoscore)
View(cwur2)
cwur[,c(5:12)] = cwur2
View(cwur)
runApp()
runApp()
rm(a,temp)
View(rankings)
rankings[rankings$new_name %in%
c('Massachusetts Institute of Technology',
'Harvard University',
'Carnegie Mellon University')]
'Carnegie Mellon University'),]
rankings[rankings$new_name %in%
c('Massachusetts Institute of Technology',
'Harvard University',
'Carnegie Mellon University'),]
temp = rankings[rankings$new_name %in%
c('Massachusetts Institute of Technology',
'Harvard University',
'Carnegie Mellon University'),]
View(temp)
temp2 = cwur[cwur$new_name %in%
c('Massachusetts Institute of Technology',
'Harvard University',
'Carnegie Mellon University'),]
View(temp2)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., cleanupRename, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name)) %>%
filter(., year == 2015)
temp2 = cwur[cwur$new_name %in%
c('Massachusetts Institute of Technology',
'Harvard University',
'Carnegie Mellon University'),]
runApp()
runApp()
runApp()
rankings %>%
filter(., new_name == 'Harvard University') %>% #input$selectUni) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp)
temp = rankings %>%
filter(., new_name == 'Harvard University') %>% #input$selectUni) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp)
temp
t(temp)
class(t(temp))
as.data.frame(t(temp))
df = rankings %>%
filter(., new_name == 'Harvard University') %>% #input$selectUni) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp)
df = as.data.frame(t(df))
df
yvar = c("alumni", "award", "hici", "ns", "pub", "pcp")
args <- list(df, yvar)
class(df)
str(df)
baruni <- function(df, yvar) {
baruni <- gvisColumnChart(df,
options=list(height=500))
baruni
}
do.call(baruni, args)
df = rankings %>%
filter(., new_name == 'Harvard University') %>% #input$selectUni) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp)
yvar = c("alumni", "award", "hici", "ns", "pub", "pcp")
args <- list(df, yvar)
baruni <- function(df, yvar) {
baruni <- gvisColumnChart(df,
#xvar="new_name",
yvar=yvar,
options=list(height=500))
baruni
}
df = rankings %>%
filter(., new_name == 'Harvard University') %>% #input$selectUni) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp)
#df = as.data.frame(t(df))
yvar = c("alumni", "award", "hici", "ns", "pub", "pcp")
args <- list(df, yvar)
do.call(baruni, args)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
legend="{position: 'bottom', maxLines: 5}"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
