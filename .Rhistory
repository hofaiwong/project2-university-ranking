runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(rankings.c)
shiny::runApp()
shiny::runApp()
unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country)) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
coordinates = read.csv("./data/rankings500.csv", stringsAsFactors = F)
unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country)) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
universities_year = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country)) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
universities_year = unique(universities_year)
View(universities_year)
universities_year = unique(universities_year)
universities_year = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country)) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
universities_year = unique(universities_year)
rankings = universities_year %>%
left_join(., cwur[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., timesData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., shanghaiData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
rename(., rank_cwur = world_rank.x,
rank_times = world_rank.y,
rank_shanghai = world_rank) %>%
mutate(., rank_times = gsub('=','',rank_times)) %>%
mutate(., rank_times = as.integer(sapply(rank_times, split_rank)),
rank_shanghai = as.integer(sapply(rank_shanghai, split_rank)))
universities = unique(rankings[,c(1,2)])
countries = sort(unique(rankings$country))
stat.2015.country = rankings[rankings$year==2015,] %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai)))
View(stat.2015.country)
View(rankings.c)
rankings[rankings$year==2015,]
df.2015.uni = rankings[rankings$year==2015,]
df.2015.country = rankings[rankings$year==2015,] %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai)))
View(df.2015.uni)
length(unique(df.2015.uni$new_name))
df.2015.uni = rankings %>%
filter(., year==2015 & !is.na(lon) & !is.na(lat))
df.2015.uni = rankings %>%
filter(., year==2015 & !is.na(lon) & !is.na(lat)) ####---> Need to add more coordinates!!!!
unimap<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addMarkers(data = df.2015.uni[,c('lon','lat')],
icon = mapIcon)
unimap
mapIcon <- makeIcon(
iconUrl = "http://www.map.boun.edu.tr/css/img/bina.png",
iconWidth = 20, iconHeight = 20
# iconAnchorX = 22, iconAnchorY = 94
# shadowUrl = "http://leafletjs.com/docs/images/leaf-shadow.png",
# shadowWidth = 50, shadowHeight = 64,
# shadowAnchorX = 4, shadowAnchorY = 62
)
output$unimap <- renderLeaflet({
unimap<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addMarkers(data = df.2015.uni[,c('lon','lat')],
icon = mapIcon)
unimap
})
unimap<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addMarkers(data = df.2015.uni[,c('lon','lat')],
icon = mapIcon)
unimap
runApp()
shiny::runApp()
runApp()
runApp()
rm(stat.2015.country)
View(coordinates)
View(coord)
rm(coord)
View(rankings.c)
rm(rankings.c)
runApp()
View(df.2015.uni)
unimap<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addMarkers(data = df.2015.uni[,c('lon','lat')], icon = mapIcon,
clusterOptions = markerClusterOptions())
unimap
mapIcon <- makeIcon(
iconUrl = "http://www.map.boun.edu.tr/css/img/bina.png",
iconWidth = 20, iconHeight = 20
# iconAnchorX = 22, iconAnchorY = 94
# shadowUrl = "http://leafletjs.com/docs/images/leaf-shadow.png",
# shadowWidth = 50, shadowHeight = 64,
# shadowAnchorX = 4, shadowAnchorY = 62
)
unimap<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addMarkers(data = df.2015.uni[,c('lon','lat')], icon = mapIcon,
clusterOptions = markerClusterOptions())
unimap
runApp()
df.2015.uni[,-c('lon','lat')]
df.2015.uni[-c('lon','lat')]
df.2015.uni[,-lon]
df.2015.uni[,c('new_name','country','rank_shanghai','rank_times','rank_cwur')]
runApp()
runApp()
View(universities)
runApp()
runApp()
runApp()
sort(universities$new_name)
runApp()
runApp()
runApp()
runApp()
gvisColumnChart(
countries
)
gvisColumnChart(
data.frame(countries)
)
gvisColumnChart(
data.frame(countries,20)
)
renderGvis({
gvisColumnChart(
data.frame(countries,20)
)
})
library(shiny)
library(leaflet)
library(googleVis)
renderGvis({
gvisColumnChart(
data.frame(countries,20)
)
})
runApp()
runApp()
runApp()
df=data.frame(country=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Col1 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"))
plot(Col1)
Col2 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(isStacked=TRUE))
plot(Col2)
Col3 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(title="Hello World",
titleTextStyle="{color:'red',fontName:'Courier',fontSize:16}",
bar="{groupWidth:'100%'}"))
plot(Col3)
View(shanghaiData)
names(shanghaiData)
df = shanghaiData %>%
filter(., year = 2015 & new_name %in% c(uni1,uni2,uni3)) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp, total_score)
runApp()
str(shanghaiData)
demo(googleVis)
Column <- gvisColumnChart(df)
plot(Column)
df
runApp()
names(timesData)
names(timesData[,c(4:13)])
names(timesData[,c(4:8,10:13,9)])
View(timesData)
names(timesData[,c(4:9)])
paste(n[!n %in% "y"], collapse = "','"])
paste(n[!n %in% "y"], collapse = "','")
n <- names(timesData[,c(4:9)])
paste(n[!n %in% "y"], collapse = "','")
paste("'",n[!n %in% "y"], collapse = "','")
paste(n[!n %in% "y"], collapse = "','")
paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'")
vec <- paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'")
yvar = c(vec)
yvar
df = timesData %>%
filter(., year == 2015 & new_name %in% c(input$uni1,input$uni2,input$uni3)) %>%
select(., new_name, teaching, international, research, citations, income, num_students, student_staff_ratio, international_students, female_male_ratio)
n <- names(timesData[,c(4:9)])
vec <- paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'")
yvar = c(vec)
df = shanghaiData %>%
filter(., year == 2015 & new_name %in% c(input$uni1,input$uni2,input$uni3)) %>%
select(., new_name, alumni, award, hici, ns, pub, pcp, total_score)
runApp()
vec
runApp()
str(timesData)
unique(timesData$international)
unique(as.num(timesData$international))
unique(numeric(timesData$international))
unique(as.numeric(timesData$international))
warning()
temp = unique(as.numeric(timesData$international))
temp
temp[is.na(temp)]
str(timesData)
View(timesData)
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
## global.R ##
library(dplyr)
##source('helpers.r')
school_and_country_table = read.csv("./data/school_and_country_table.csv", stringsAsFactors = F) %>%
rename(., university_name = school_name)
missingCountry = read.csv("./data/university no country.csv", stringsAsFactors = F)
renamedUnis = read.csv("./data/renameUnis.csv", stringsAsFactors = F)
coordinates = read.csv("./data/rankings500.csv", stringsAsFactors = F)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
shanghaiData = read.csv("./data/shanghaiData.csv", stringsAsFactors = F) %>%
left_join(., rbind(school_and_country_table,missingCountry), by = c('university_name')) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
#expenditure = read.csv("education_expenditure_supplementary_data.csv", stringsAsFactors = F)
#attainment = read.csv("educational_attainment_supplementary_data.csv", stringsAsFactors = F)
universities_year = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country))
universities_year = unique(universities_year) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
rankings = universities_year %>%
left_join(., cwur[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., timesData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., shanghaiData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
rename(., rank_cwur = world_rank.x,
rank_times = world_rank.y,
rank_shanghai = world_rank) %>%
mutate(., rank_times = gsub('=','',rank_times)) %>%
mutate(., rank_times = as.integer(sapply(rank_times, split_rank)),
rank_shanghai = as.integer(sapply(rank_shanghai, split_rank)))
universities = unique(rankings[,c(1,2)])
countries = sort(unique(rankings$country))
df.2015.country = rankings[rankings$year==2015,] %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai)))
df.2015.uni = rankings %>%
filter(., year==2015 & !is.na(lon) & !is.na(lat)) ####---> Need to add more coordinates!!!!
runApp()
names(cwur)
n <- names(cwur[,c(5:13)])
vec <- as.formula(paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'"))
n <- names(cwur[,c(5:13)])
vec <- as.formula(paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'"))
vec <- paste0("'",paste(n[!n %in% "y"], collapse = "','"),"'")
vec
vec <- paste(n[!n %in% "y"], collapse = "")
vec
vec <- paste0("'",paste(n[!n %in% "y"], collapse = ","),"'")
vec
runApp()
View(cwur)
setwd("~/Desktop/Project 2/world-university-ranking")
## global.R ##
library(dplyr)
##source('helpers.r')
school_and_country_table = read.csv("./data/school_and_country_table.csv", stringsAsFactors = F) %>%
rename(., university_name = school_name)
missingCountry = read.csv("./data/university no country.csv", stringsAsFactors = F)
renamedUnis = read.csv("./data/renameUnis.csv", stringsAsFactors = F)
coordinates = read.csv("./data/rankings500.csv", stringsAsFactors = F)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
shanghaiData = read.csv("./data/shanghaiData.csv", stringsAsFactors = F) %>%
left_join(., rbind(school_and_country_table,missingCountry), by = c('university_name')) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
#expenditure = read.csv("education_expenditure_supplementary_data.csv", stringsAsFactors = F)
#attainment = read.csv("educational_attainment_supplementary_data.csv", stringsAsFactors = F)
universities_year = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country))
universities_year = unique(universities_year) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
rankings = universities_year %>%
left_join(., cwur[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., timesData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., shanghaiData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
rename(., rank_cwur = world_rank.x,
rank_times = world_rank.y,
rank_shanghai = world_rank) %>%
mutate(., rank_times = gsub('=','',rank_times)) %>%
mutate(., rank_times = as.integer(sapply(rank_times, split_rank)),
rank_shanghai = as.integer(sapply(rank_shanghai, split_rank)))
universities = unique(rankings[,c(1,2)])
countries = sort(unique(rankings$country))
df.2015.country = rankings[rankings$year==2015,] %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai)))
df.2015.uni = rankings %>%
filter(., year==2015 & !is.na(lon) & !is.na(lat)) ####---> Need to add more coordinates!!!!
setwd("~/Desktop/Project 2/world-university-ranking")
## global.R ##
library(dplyr)
source('helpers.r')
school_and_country_table = read.csv("./data/school_and_country_table.csv", stringsAsFactors = F) %>%
rename(., university_name = school_name)
missingCountry = read.csv("./data/university no country.csv", stringsAsFactors = F)
renamedUnis = read.csv("./data/renameUnis.csv", stringsAsFactors = F)
coordinates = read.csv("./data/rankings500.csv", stringsAsFactors = F)
cwur = read.csv("./data/cwurData.csv", stringsAsFactors = F) %>%
rename(., university_name = institution, total_score = score) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
shanghaiData = read.csv("./data/shanghaiData.csv", stringsAsFactors = F) %>%
left_join(., rbind(school_and_country_table,missingCountry), by = c('university_name')) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name))
timesData = read.csv("./data/timesData.csv", stringsAsFactors = F) %>%
mutate(., university_name = ifelse (grepl('^The ', university_name),
gsub('The ','',university_name),
university_name)) %>%
left_join(., renamedUnis, by = c('university_name')) %>%
mutate(., new_name = ifelse(is.na(new_name), university_name, new_name),
international = as.numeric(international),
income = as.numeric(income),
total_score = as.numeric(total_score))
#expenditure = read.csv("education_expenditure_supplementary_data.csv", stringsAsFactors = F)
#attainment = read.csv("educational_attainment_supplementary_data.csv", stringsAsFactors = F)
universities_year = unique(rbind(cwur[,c('new_name','country','year')],
timesData[,c('new_name','country','year')],
shanghaiData[,c('new_name','country','year')])) %>%
mutate(., country = gsub('Republic of Ireland', 'Ireland', country)) %>%
mutate(., country = gsub('USA','United States of America', country)) %>%
mutate(., country = gsub('Unisted States of America','United States of America', country)) %>%
mutate(., country = gsub('Unted Kingdom', 'United Kingdom', country)) %>%
mutate(., country = gsub('UK', 'United Kingdom', country)) %>%
mutate(., country = gsub('Slovak Republic', 'Slovakia', country)) %>%
mutate(., country = gsub('Russian Federation', 'Russia', country))
universities_year = unique(universities_year) %>%
left_join(., coordinates[,c('new_name','lon','lat')], by = c('new_name'))
rankings = universities_year %>%
left_join(., cwur[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., timesData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
left_join(., shanghaiData[,c('new_name','world_rank', 'year')], by = c('new_name', 'year')) %>%
rename(., rank_cwur = world_rank.x,
rank_times = world_rank.y,
rank_shanghai = world_rank) %>%
mutate(., rank_times = gsub('=','',rank_times)) %>%
mutate(., rank_times = as.integer(sapply(rank_times, split_rank)),
rank_shanghai = as.integer(sapply(rank_shanghai, split_rank)))
universities = unique(rankings[,c(1,2)])
countries = sort(unique(rankings$country))
df.2015.country = rankings[rankings$year==2015,] %>%
group_by(., country) %>%
summarise(., top_cwur = min(rank_cwur, na.rm=T),
top_times = min(rank_times, na.rm=T),
top_shanghai = min(rank_shanghai, na.rm=T),
median_cwur = round(median(rank_cwur, na.rm=T)),
median_times = round(median(rank_times, na.rm=T)),
median_shanghai = round(median(rank_shanghai, na.rm=T)),
count_cwur = sum(!is.na(rank_cwur)),
count_times = sum(!is.na(rank_times)),
count_shanghai = sum(!is.na(rank_shanghai)))
df.2015.uni = rankings %>%
filter(., year==2015 & !is.na(lon) & !is.na(lat)) ####---> Need to add more coordinates!!!!
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
