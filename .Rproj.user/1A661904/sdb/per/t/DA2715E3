{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(leaflet)\nlibrary(googleVis)\nsource('./helpers.R')\n\n## server.R ##\nshinyServer(function(input, output){\n  \n  mapIcon <- makeIcon(\n    iconUrl = \"http://www.map.boun.edu.tr/css/img/bina.png\",\n    iconWidth = 20, iconHeight = 20\n    # iconAnchorX = 22, iconAnchorY = 94\n    # shadowUrl = \"http://leafletjs.com/docs/images/leaf-shadow.png\",\n    # shadowWidth = 50, shadowHeight = 64,\n    # shadowAnchorX = 4, shadowAnchorY = 62\n  )\n  \n  #Tab1: World map with country stats\n  output$country.map <- renderGvis({\n    args <- if (input$selectedStat == 1) { #Top\n      switch(input$sourceCountry,\n             '1' = list(df.2015.country$top_shanghai, 'top_shanghai', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n             '3'= list(df.2015.country$top_cwur, 'top_cwur', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n             '2' = list(df.2015.country$top_times, 'top_times', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\")\n      )} else if (input$selectedStat == 2) { #Median\n        switch(input$sourceCountry,\n               '1' = list(df.2015.country$median_shanghai, 'median_shanghai', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n               '3' = list(df.2015.country$median_cwur, 'median_cwur', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n               '2' = list(df.2015.country$median_times, 'median_times', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\")\n      )} else if (input$selectedStat == 3) { #Count\n        switch(input$sourceCountry,\n               '1' = list(df.2015.country$count_shanghai, 'count_shanghai', \"{colors: [\\'yellow\\', \\'green\\']}\"),\n               '3' = list(df.2015.country$count_cwur, 'count_cwur', \"{colors: [\\'yellow\\', \\'green\\']}\"),\n               '2' = list(df.2015.country$count_times, 'count_times', \"{colors: [\\'yellow\\', \\'green\\']}\")\n        )}\n\n    world_map <- function(var, stat, color) {\n      df = df.2015.country[!is.na(var),]\n      gvisGeoChart(data = df, \n                   locationvar = \"country\", \n                   colorvar = stat,\n                   options=list(\n                     projection=\"kavrayskiy-vii\",\n                     colorAxis=color\n                   )\n      )}\n    \n    do.call(world_map, args)\n    \n  })\n  \n  #Tab1: World map with country stats - Data table\n  output$country.table <- renderDataTable({\n    df.2015.country\n  })\n  \n  #Tab2: World map with universities\n  output$unimap <- renderLeaflet({\n    # args2 <- switch(input$sourceCountry,\n    #                 '1' = list(df.2015.uni$rank_shanghai, 'top_shanghai', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n    #                 '3'= list(df.2015.uni$rank_cwur, 'top_cwur', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\"),\n    #                 '2' = list(df.2015.uni$rank_times, 'top_times', \"{colors: [\\'green\\', \\'yellow\\', \\'red\\']}\")\n    # )\n    # \n    # unimap <- function(var, stat, color) {\n      unimap<-leaflet() %>%\n        addProviderTiles(\"CartoDB.Positron\") %>%\n        addTiles(urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n                 attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>') %>%\n        addMarkers(data = df.2015.uni[,c('lon','lat')], \n                   icon = mapIcon,\n                   clusterOptions = markerClusterOptions())\n      unimap\n    # }\n    # \n    # do.call(uni_map, args2)\n    \n  })\n  \n  \n  #Tab2: World map with universities - Data table\n  output$uni.table <- renderDataTable({\n    df.2015.uni[,c('new_name','country','rank_shanghai','rank_times','rank_cwur')]\n  })  \n  \n  #Tab3: Bar chart for school comparison\n  output$compare.shanghai <- renderGvis({\n      df = shanghaiData %>%\n        filter(., year == 2015 & new_name %in% c(input$uni1,input$uni2,input$uni3)) %>%\n        select(., new_name, alumni, award, hici, ns, pub, pcp, total_score)\n      yvar = c(\"alumni\", \"award\", \"hici\", \"ns\", \"pub\", \"pcp\", \"total_score\")\n      args <- list(df, yvar)\n      do.call(compuni, args)\n  })\n  \n  output$compare.times <- renderGvis({\n    df = timesData %>%\n      filter(., year == 2015 & new_name %in% c(input$uni1,input$uni2,input$uni3)) %>%\n      select(., new_name, teaching, international, research, citations, income, total_score)\n    yvar = c('teaching','international','research','citations','income','total_score')\n    args <- list(df, yvar)\n    do.call(compuni, args)\n  })\n  \n  output$compare.cwur <- renderGvis({\n    df = cwur %>%\n      filter(., year == 2015 & new_name %in% c(input$uni1,input$uni2,input$uni3)) %>%\n      select(., new_name, quality_of_education,alumni_employment,quality_of_faculty,publications,influence,citations,broad_impact,patents,total_score)\n    yvar = c('quality_of_education','alumni_employment','quality_of_faculty','publications','influence','citations','broad_impact','patents')\n    args <- list(df, yvar)\n    do.call(compuni, args)\n  })\n  \n})",
    "created" : 1462294062199.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1100350780",
    "id" : "DA2715E3",
    "lastKnownWriteTime" : 1462453721,
    "last_content_update" : 1462453721412,
    "path" : "~/Desktop/Project 2/world-university-ranking/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}